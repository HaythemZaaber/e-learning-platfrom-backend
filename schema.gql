# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserObject {
  id: ID!
  clerkId: String!
  email: String!
  firstName: String
  lastName: String
  profileImage: String
  phone: String
  address: String
  city: String
  state: String
  zip: String
  country: String
  role: UserRole!
  createdAt: DateTime
  updatedAt: DateTime
}

"""
The role of the user
"""
enum UserRole {
  VISITOR
  STUDENT
  INSTRUCTOR
  ADMIN
  PARENT
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Section {
  id: ID!
  title: String!
  description: String
  order: Int!
  isLocked: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  lessons: [Lesson!]
}

type Lesson {
  id: ID!
  title: String!
  description: String
  type: String!
  content: String
  videoUrl: String
  audioUrl: String
  attachmentUrl: String
  downloadUrls: [String!]!
  duration: Int!
  order: Int!
  isPreview: Boolean!
  isInteractive: Boolean!
  hasAIQuiz: Boolean!
  aiSummary: String
  transcription: String
  captions: String
  transcript: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Course {
  id: ID!
  title: String!
  description: String!
  shortDescription: String
  category: String!
  subcategory: String
  level: String!
  thumbnail: String
  trailer: String
  price: Float!
  originalPrice: Float
  currency: String!
  objectives: [String!]!
  prerequisites: [String!]!
  whatYouLearn: [String!]!
  seoTags: [String!]!
  marketingTags: [String!]!
  status: String!
  enrollmentType: String!
  language: String!
  isPublic: Boolean!
  certificate: Boolean!
  hasAITutor: Boolean!
  aiPersonality: String
  difficulty: Float!
  estimatedHours: Int!
  views: Int!
  avgRating: Float!
  totalRatings: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  publishedAt: DateTime
  instructorId: String!
  instructor: UserObject
  sections: [Section!]
  totalLessons: Int
  totalDuration: Int
  enrollmentCount: Int
  completionPercentage: Float
}

type CourseCreationResponse {
  success: Boolean!
  message: String!
  course: Course
  errors: [String!]
  nextSteps: [String!]
}

type CourseDraftResponse {
  success: Boolean!
  message: String!
  draftData: JSON
  currentStep: Int
  completionScore: Int
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Query {
  me: UserObject
  users: [UserObject!]!
  getCourseDraft: CourseDraftResponse!
  getCourse(courseId: String!): Course!
  getCourses(filters: CourseFiltersInput): [Course!]!
  getMyCourses: [Course!]!
  myEnrollments: [Enrollment!]!
  myEnrollment(courseId: String!): Enrollment
}

input CourseFiltersInput {
  search: String
  category: String
  level: CourseLevel
  enrollmentType: EnrollmentType
  tags: [String!]
}

"""
The difficulty level of the course
"""
enum CourseLevel {
  BEGINNER
  INTERMEDIATE
  ADVANCED
  EXPERT
  ALL_LEVELS
}

"""
The type of enrollment for the course
"""
enum EnrollmentType {
  FREE
  PAID
  SUBSCRIPTION
  INVITATION_ONLY
}

type Mutation {
  updateUserRole(clerkId: String!, role: String!): UserObject!
  createCourse(input: CreateCourseInput!): CourseCreationResponse!
  createCourseWithBasicInfo(
    title: String!
    description: String!
    category: String!
    level: String!
  ): CourseCreationResponse!
  saveCourseDraft(input: SaveCourseDraftInput!): CourseDraftResponse!
  deleteCourseDraft: CourseCreationResponse!
  createTextContent(
    courseId: String!
    title: String!
    content: String!
    description: String
    lessonId: String
    order: Float
  ): CourseCreationResponse!
  createAssignment(
    courseId: String!
    title: String!
    description: String!
    instructions: String
    dueDate: String
    points: Float
    lessonId: String
    order: Float
  ): CourseCreationResponse!
  createResourceLink(
    courseId: String!
    title: String!
    url: String!
    resourceType: String!
    description: String
    lessonId: String
    order: Float
  ): CourseCreationResponse!
  updateCourse(
    courseId: String!
    input: UpdateCourseInput!
  ): CourseCreationResponse!
  publishCourse(courseId: String!): CourseCreationResponse!
}

input CreateCourseInput {
  title: String!
  description: String!
  shortDescription: String
  category: String!
  subcategory: String
  level: CourseLevel! = BEGINNER
  thumbnail: String
  trailer: String
  price: Float! = 0
  originalPrice: Float
  currency: String! = "USD"
  objectives: [String!]! = []
  prerequisites: [String!]! = []
  whatYouLearn: [String!]! = []
  seoTags: [String!]! = []
  marketingTags: [String!]! = []
  sections: [SectionInput!]! = []
  settings: CourseSettingsInput
  additionalContent: [ContentItemInput!]! = []
}

input SectionInput {
  id: String!
  title: String!
  description: String
  lectures: [LectureInput!]! = []
}

input LectureInput {
  id: String!
  title: String!
  description: String
  status: String
  type: LessonType!
  duration: Int! = 0
  content: String
  contentItem: ContentItemInput
  settings: JSON
}

"""
The type of lesson
"""
enum LessonType {
  VIDEO
  TEXT
  AUDIO
  QUIZ
  ASSIGNMENT
  DOWNLOAD
  INTERACTIVE
  LIVE_SESSION
  AR_VR
}

input ContentItemInput {
  title: String!
  description: String
  type: ContentType!
  fileUrl: String
  fileName: String
  fileSize: Int
  mimeType: String
  contentData: JSON
  order: Int! = 0
}

"""
The type of content item
"""
enum ContentType {
  VIDEO
  AUDIO
  DOCUMENT
  TEXT
  QUIZ
  ASSIGNMENT
  RESOURCE
  LINK
  IMAGE
  ARCHIVE
}

input CourseSettingsInput {
  isPublic: Boolean! = true
  enrollmentType: EnrollmentType! = FREE
  language: String! = "en"
  certificate: Boolean! = false
  seoDescription: String
  seoTags: [String!]! = []
  accessibility: AccessibilitySettingsInput
  pricing: PricingSettingsInput
  enrollment: EnrollmentSettingsInput
  communication: CommunicationSettingsInput
  completion: CompletionSettingsInput
  content: ContentAccessSettingsInput
  marketing: MarketingSettingsInput
}

input AccessibilitySettingsInput {
  captions: Boolean! = false
  transcripts: Boolean! = false
  audioDescription: Boolean! = false
  signLanguage: Boolean! = false
}

input PricingSettingsInput {
  amount: Float! = 0
  currency: String! = "USD"
  discountPercentage: Int! = 0
  earlyBirdDiscount: Boolean! = false
  installmentPlans: Boolean! = false
}

input EnrollmentSettingsInput {
  maxStudents: Int
  enrollmentDeadline: String
  prerequisitesCourse: String
  ageRestriction: String! = "none"
}

input CommunicationSettingsInput {
  discussionForum: Boolean! = true
  directMessaging: Boolean! = false
  liveChat: Boolean! = false
  announcementEmails: Boolean! = true
}

input CompletionSettingsInput {
  passingGrade: Int! = 70
  allowRetakes: Boolean! = true
  timeLimit: Int
  certificateTemplate: String! = "default"
}

input ContentAccessSettingsInput {
  downloadableResources: Boolean! = true
  offlineAccess: Boolean! = false
  mobileOptimized: Boolean! = true
  printableMaterials: Boolean! = false
}

input MarketingSettingsInput {
  featuredCourse: Boolean! = false
  courseTags: [String!]! = []
  difficultyRating: String! = "beginner"
  estimatedDuration: String
}

input SaveCourseDraftInput {
  draftData: JSON!
  currentStep: Int! = 0
  completionScore: Int! = 0
}

input UpdateCourseInput {
  title: String
  description: String
  shortDescription: String
  category: String
  level: CourseLevel
  thumbnail: String
  price: Float
  objectives: [String!]
}
